plot.background = element_blank()
,panel.grid.major = element_blank()
,panel.grid.minor = element_blank()
,panel.border = element_blank()
) +
theme(axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5))
plot_t <- ggplot(mydata, aes(x=x_normcounts, y=y_normcounts)) +
geom_point(aes(colour=factor(no_t)), shape=".") +
scale_colour_manual(values=NewReds, name="Ts in kmer") +
scale_x_continuous(name=xlabel, limits=c(0, 3)) +
scale_y_continuous(name=ylabel, limits=c(0, 3)) +
guides(colour = guide_legend(override.aes = list(shape=15))) +
theme_bw() +
theme(
plot.background = element_blank()
,panel.grid.major = element_blank()
,panel.grid.minor = element_blank()
,panel.border = element_blank()
) +
theme(axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5))
plot_a <- ggplot(mydata, aes(x=x_normcounts, y=y_normcounts)) +
geom_point(aes(colour=factor(no_a)), shape=".") +
scale_colour_manual(values=NewGreens, name="As in kmer") +
scale_x_continuous(name=xlabel, limits=c(0, 3)) +
scale_y_continuous(name=ylabel, limits=c(0, 3)) +
guides(colour = guide_legend(override.aes = list(shape=15))) +
theme_bw() +
theme(
plot.background = element_blank()
,panel.grid.major = element_blank()
,panel.grid.minor = element_blank()
,panel.border = element_blank()
) +
theme(axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5))
# Putting them all together
grid.arrange(plot_a, plot_c, plot_g, plot_t, nrow = 2)
# Spit out correlation
cor.test(mydata$x_normcounts, mydata$y_normcounts, method="pearson", conf.level=0.95)
library(ggplot2)
library(gtable)
library(gridExtra)
library(RColorBrewer)
# Load data
normcnt <- readRDS("~/selex2019/kmer_cnt_R_PCRBIAS/Trulig147v1III-Arin2-PCRbias-4DiffCycle-Phusion-2xx16dilu-0cycPCR-IIIc1-E1-ZhuBar96p1-bTAGTGTTG_S49_R1_001.peared_trimmed.fq.gz.RDS", refhook=NULL)
kmerbasefreqs <- readRDS("~/github/selex2019/analysis/kmerbasefreqs.RDS", refhook=NULL)
xcnt <- readRDS("~/selex2019/kmer_cnt_R_PCRBIAS/Trulig147v1III-Arin2-PCRbias-3DiffEnzyme-Phusion-1xbottolNeckPCR-IIIc1-A6-ZhuBar96p1-bTCTTTAAT_S6_R1_001.peared_trimmed.fq.gz.RDS", refhook=NULL)
ycnt <- readRDS("~/selex2019/kmer_cnt_R_PCRBIAS/Trulig147v1III-Arin2-PCRbias-3DiffEnzyme-Phusion-2xbottolNeckPCR-IIIc1-A7-ZhuBar96p1-bGTGTTGGC_S7_R1_001.peared_trimmed.fq.gz.RDS", refhook=NULL)
# Define axis labels here
# (trust me, this is easier than extracting this info from the filenames)
xlabel = "Phusion bottleneck 1 fold change"
ylabel = "Phusion bottleneck 2 fold change"
kmers <- nrow(normcnt)
# Normalise data
xcnt_norm <- data.frame(normcnt$kmer, xcnt$counts/normcnt$counts)
colnames(xcnt_norm) <- c("kmer", "x_normcounts")
ycnt_norm <- data.frame(normcnt$kmer, ycnt$counts/normcnt$counts)
colnames(ycnt_norm) <- c("kmer", "y_normcounts")
# Prepare data frame for plotting
mydata <- data.frame(normcnt$kmer, xcnt_norm$x_normcounts, ycnt_norm$y_normcounts, kmerbasefreqs)
colnames(mydata) <- c("kmer", "x_normcounts", "y_normcounts", "no_a", "no_c", "no_g", "no_t")
# Extend colour palettes to cover 10 values (0-9)
NewGreens <- colorRampPalette(brewer.pal(9,"Greens"))(10)
NewBlues <- colorRampPalette(brewer.pal(9,"Blues"))(10)
NewPurples <- colorRampPalette(brewer.pal(9,"Purples"))(10)
NewReds <- colorRampPalette(brewer.pal(9,"Reds"))(10)
# Define plots
plot_a <- ggplot(mydata, aes(x=x_normcounts, y=y_normcounts)) +
geom_point(aes(colour=factor(no_a)), shape=".") +
scale_colour_manual(values=NewGreens, name="As in kmer") +
scale_x_continuous(name=xlabel, limits=c(0, 3)) +
scale_y_continuous(name=ylabel, limits=c(0, 3)) +
guides(colour = guide_legend(override.aes = list(shape=15))) +
theme_bw() +
theme(
plot.background = element_blank()
,panel.grid.major = element_blank()
,panel.grid.minor = element_blank()
,panel.border = element_blank()
) +
theme(axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5))
plot_c <- ggplot(mydata, aes(x=x_normcounts, y=y_normcounts)) +
geom_point(aes(colour=factor(no_c)), shape=".") +
scale_colour_manual(values=NewBlues, name="Cs in kmer") +
scale_x_continuous(name=xlabel, limits=c(0, 3)) +
scale_y_continuous(name=ylabel, limits=c(0, 3)) +
guides(colour = guide_legend(override.aes = list(shape=15))) +
theme_bw() +
theme(
plot.background = element_blank()
,panel.grid.major = element_blank()
,panel.grid.minor = element_blank()
,panel.border = element_blank()
) +
theme(axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5))
plot_g <- ggplot(mydata, aes(x=x_normcounts, y=y_normcounts)) +
geom_point(aes(colour=factor(no_g)), shape=".") +
scale_colour_manual(values=NewPurples, name="Gs in kmer") +
scale_x_continuous(name=xlabel, limits=c(0, 3)) +
scale_y_continuous(name=ylabel, limits=c(0, 3)) +
guides(colour = guide_legend(override.aes = list(shape=15))) +
theme_bw() +
theme(
plot.background = element_blank()
,panel.grid.major = element_blank()
,panel.grid.minor = element_blank()
,panel.border = element_blank()
) +
theme(axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5))
plot_t <- ggplot(mydata, aes(x=x_normcounts, y=y_normcounts)) +
geom_point(aes(colour=factor(no_t)), shape=".") +
scale_colour_manual(values=NewReds, name="Ts in kmer") +
scale_x_continuous(name=xlabel, limits=c(0, 3)) +
scale_y_continuous(name=ylabel, limits=c(0, 3)) +
guides(colour = guide_legend(override.aes = list(shape=15))) +
theme_bw() +
theme(
plot.background = element_blank()
,panel.grid.major = element_blank()
,panel.grid.minor = element_blank()
,panel.border = element_blank()
) +
theme(axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5))
plot_a <- ggplot(mydata, aes(x=x_normcounts, y=y_normcounts)) +
geom_point(aes(colour=factor(no_a)), shape=".") +
scale_colour_manual(values=NewGreens, name="As in kmer") +
scale_x_continuous(name=xlabel, limits=c(0, 3)) +
scale_y_continuous(name=ylabel, limits=c(0, 3)) +
guides(colour = guide_legend(override.aes = list(shape=15))) +
theme_bw() +
theme(
plot.background = element_blank()
,panel.grid.major = element_blank()
,panel.grid.minor = element_blank()
,panel.border = element_blank()
) +
theme(axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5))
# Putting them all together
grid.arrange(plot_a, plot_c, plot_g, plot_t, nrow = 2)
# Spit out correlation
cor.test(mydata$x_normcounts, mydata$y_normcounts, method="pearson", conf.level=0.95)
library(ggplot2)
library(gtable)
library(gridExtra)
library(RColorBrewer)
# Load data
normcnt <- readRDS("~/selex2019/kmer_cnt_R_PCRBIAS/Trulig147v1III-Arin2-PCRbias-4DiffCycle-Phusion-2xx16dilu-0cycPCR-IIIc1-E1-ZhuBar96p1-bTAGTGTTG_S49_R1_001.peared_trimmed.fq.gz.RDS", refhook=NULL)
kmerbasefreqs <- readRDS("~/github/selex2019/analysis/kmerbasefreqs.RDS", refhook=NULL)
xcnt <- readRDS("~/selex2019/kmer_cnt_R_PCRBIAS/Trulig147v1III-Arin2-PCRbias-3DiffEnzyme-DreamTaq-1xbottolNeckPCR-IIIc1-D6-ZhuBar96p1-bGCTCTTGG_S42_R1_001.peared_trimmed.fq.gz.RDS", refhook=NULL)
ycnt <- readRDS("~/selex2019/kmer_cnt_R_PCRBIAS/Trulig147v1III-Arin2-PCRbias-3DiffEnzyme-DreamTaq-2xbottolNeckPCR-IIIc1-D7-ZhuBar96p1-bTGGAACTA_S43_R1_001.peared_trimmed.fq.gz.RDS", refhook=NULL)
# Define axis labels here
# (trust me, this is easier than extracting this info from the filenames)
xlabel = "Phusion bottleneck 1 fold change"
ylabel = "Phusion bottleneck 2 fold change"
kmers <- nrow(normcnt)
# Normalise data
xcnt_norm <- data.frame(normcnt$kmer, xcnt$counts/normcnt$counts)
colnames(xcnt_norm) <- c("kmer", "x_normcounts")
ycnt_norm <- data.frame(normcnt$kmer, ycnt$counts/normcnt$counts)
colnames(ycnt_norm) <- c("kmer", "y_normcounts")
# Prepare data frame for plotting
mydata <- data.frame(normcnt$kmer, xcnt_norm$x_normcounts, ycnt_norm$y_normcounts, kmerbasefreqs)
colnames(mydata) <- c("kmer", "x_normcounts", "y_normcounts", "no_a", "no_c", "no_g", "no_t")
# Extend colour palettes to cover 10 values (0-9)
NewGreens <- colorRampPalette(brewer.pal(9,"Greens"))(10)
NewBlues <- colorRampPalette(brewer.pal(9,"Blues"))(10)
NewPurples <- colorRampPalette(brewer.pal(9,"Purples"))(10)
NewReds <- colorRampPalette(brewer.pal(9,"Reds"))(10)
# Define plots
plot_a <- ggplot(mydata, aes(x=x_normcounts, y=y_normcounts)) +
geom_point(aes(colour=factor(no_a)), shape=".") +
scale_colour_manual(values=NewGreens, name="As in kmer") +
scale_x_continuous(name=xlabel, limits=c(0, 3)) +
scale_y_continuous(name=ylabel, limits=c(0, 3)) +
guides(colour = guide_legend(override.aes = list(shape=15))) +
theme_bw() +
theme(
plot.background = element_blank()
,panel.grid.major = element_blank()
,panel.grid.minor = element_blank()
,panel.border = element_blank()
) +
theme(axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5))
plot_c <- ggplot(mydata, aes(x=x_normcounts, y=y_normcounts)) +
geom_point(aes(colour=factor(no_c)), shape=".") +
scale_colour_manual(values=NewBlues, name="Cs in kmer") +
scale_x_continuous(name=xlabel, limits=c(0, 3)) +
scale_y_continuous(name=ylabel, limits=c(0, 3)) +
guides(colour = guide_legend(override.aes = list(shape=15))) +
theme_bw() +
theme(
plot.background = element_blank()
,panel.grid.major = element_blank()
,panel.grid.minor = element_blank()
,panel.border = element_blank()
) +
theme(axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5))
plot_g <- ggplot(mydata, aes(x=x_normcounts, y=y_normcounts)) +
geom_point(aes(colour=factor(no_g)), shape=".") +
scale_colour_manual(values=NewPurples, name="Gs in kmer") +
scale_x_continuous(name=xlabel, limits=c(0, 3)) +
scale_y_continuous(name=ylabel, limits=c(0, 3)) +
guides(colour = guide_legend(override.aes = list(shape=15))) +
theme_bw() +
theme(
plot.background = element_blank()
,panel.grid.major = element_blank()
,panel.grid.minor = element_blank()
,panel.border = element_blank()
) +
theme(axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5))
plot_t <- ggplot(mydata, aes(x=x_normcounts, y=y_normcounts)) +
geom_point(aes(colour=factor(no_t)), shape=".") +
scale_colour_manual(values=NewReds, name="Ts in kmer") +
scale_x_continuous(name=xlabel, limits=c(0, 3)) +
scale_y_continuous(name=ylabel, limits=c(0, 3)) +
guides(colour = guide_legend(override.aes = list(shape=15))) +
theme_bw() +
theme(
plot.background = element_blank()
,panel.grid.major = element_blank()
,panel.grid.minor = element_blank()
,panel.border = element_blank()
) +
theme(axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5))
plot_a <- ggplot(mydata, aes(x=x_normcounts, y=y_normcounts)) +
geom_point(aes(colour=factor(no_a)), shape=".") +
scale_colour_manual(values=NewGreens, name="As in kmer") +
scale_x_continuous(name=xlabel, limits=c(0, 3)) +
scale_y_continuous(name=ylabel, limits=c(0, 3)) +
guides(colour = guide_legend(override.aes = list(shape=15))) +
theme_bw() +
theme(
plot.background = element_blank()
,panel.grid.major = element_blank()
,panel.grid.minor = element_blank()
,panel.border = element_blank()
) +
theme(axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5))
# Putting them all together
grid.arrange(plot_a, plot_c, plot_g, plot_t, nrow = 2)
# Spit out correlation
cor.test(mydata$x_normcounts, mydata$y_normcounts, method="pearson", conf.level=0.95)
library(ggplot2)
library(gtable)
library(gridExtra)
library(RColorBrewer)
# Load data
normcnt <- readRDS("~/selex2019/kmer_cnt_R_PCRBIAS/Trulig147v1III-Arin2-PCRbias-4DiffCycle-Phusion-2xx16dilu-0cycPCR-IIIc1-E1-ZhuBar96p1-bTAGTGTTG_S49_R1_001.peared_trimmed.fq.gz.RDS", refhook=NULL)
kmerbasefreqs <- readRDS("~/github/selex2019/analysis/kmerbasefreqs.RDS", refhook=NULL)
xcnt <- readRDS("~/selex2019/kmer_cnt_R_PCRBIAS/Trulig147v1III-Arin2-PCRbias-3DiffEnzyme-DreamTaq-1xbottolNeckPCR-IIIc1-D6-ZhuBar96p1-bGCTCTTGG_S42_R1_001.peared_trimmed.fq.gz.RDS", refhook=NULL)
ycnt <- readRDS("~/selex2019/kmer_cnt_R_PCRBIAS/Trulig147v1III-Arin2-PCRbias-3DiffEnzyme-DreamTaq-2xbottolNeckPCR-IIIc1-D7-ZhuBar96p1-bTGGAACTA_S43_R1_001.peared_trimmed.fq.gz.RDS", refhook=NULL)
# Define axis labels here
# (trust me, this is easier than extracting this info from the filenames)
xlabel = "DreamTaq bottleneck 1 fold change"
ylabel = "DreamTaq bottleneck 2 fold change"
kmers <- nrow(normcnt)
# Normalise data
xcnt_norm <- data.frame(normcnt$kmer, xcnt$counts/normcnt$counts)
colnames(xcnt_norm) <- c("kmer", "x_normcounts")
ycnt_norm <- data.frame(normcnt$kmer, ycnt$counts/normcnt$counts)
colnames(ycnt_norm) <- c("kmer", "y_normcounts")
# Prepare data frame for plotting
mydata <- data.frame(normcnt$kmer, xcnt_norm$x_normcounts, ycnt_norm$y_normcounts, kmerbasefreqs)
colnames(mydata) <- c("kmer", "x_normcounts", "y_normcounts", "no_a", "no_c", "no_g", "no_t")
# Extend colour palettes to cover 10 values (0-9)
NewGreens <- colorRampPalette(brewer.pal(9,"Greens"))(10)
NewBlues <- colorRampPalette(brewer.pal(9,"Blues"))(10)
NewPurples <- colorRampPalette(brewer.pal(9,"Purples"))(10)
NewReds <- colorRampPalette(brewer.pal(9,"Reds"))(10)
# Define plots
plot_a <- ggplot(mydata, aes(x=x_normcounts, y=y_normcounts)) +
geom_point(aes(colour=factor(no_a)), shape=".") +
scale_colour_manual(values=NewGreens, name="As in kmer") +
scale_x_continuous(name=xlabel, limits=c(0, 3)) +
scale_y_continuous(name=ylabel, limits=c(0, 3)) +
guides(colour = guide_legend(override.aes = list(shape=15))) +
theme_bw() +
theme(
plot.background = element_blank()
,panel.grid.major = element_blank()
,panel.grid.minor = element_blank()
,panel.border = element_blank()
) +
theme(axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5))
plot_c <- ggplot(mydata, aes(x=x_normcounts, y=y_normcounts)) +
geom_point(aes(colour=factor(no_c)), shape=".") +
scale_colour_manual(values=NewBlues, name="Cs in kmer") +
scale_x_continuous(name=xlabel, limits=c(0, 3)) +
scale_y_continuous(name=ylabel, limits=c(0, 3)) +
guides(colour = guide_legend(override.aes = list(shape=15))) +
theme_bw() +
theme(
plot.background = element_blank()
,panel.grid.major = element_blank()
,panel.grid.minor = element_blank()
,panel.border = element_blank()
) +
theme(axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5))
plot_g <- ggplot(mydata, aes(x=x_normcounts, y=y_normcounts)) +
geom_point(aes(colour=factor(no_g)), shape=".") +
scale_colour_manual(values=NewPurples, name="Gs in kmer") +
scale_x_continuous(name=xlabel, limits=c(0, 3)) +
scale_y_continuous(name=ylabel, limits=c(0, 3)) +
guides(colour = guide_legend(override.aes = list(shape=15))) +
theme_bw() +
theme(
plot.background = element_blank()
,panel.grid.major = element_blank()
,panel.grid.minor = element_blank()
,panel.border = element_blank()
) +
theme(axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5))
plot_t <- ggplot(mydata, aes(x=x_normcounts, y=y_normcounts)) +
geom_point(aes(colour=factor(no_t)), shape=".") +
scale_colour_manual(values=NewReds, name="Ts in kmer") +
scale_x_continuous(name=xlabel, limits=c(0, 3)) +
scale_y_continuous(name=ylabel, limits=c(0, 3)) +
guides(colour = guide_legend(override.aes = list(shape=15))) +
theme_bw() +
theme(
plot.background = element_blank()
,panel.grid.major = element_blank()
,panel.grid.minor = element_blank()
,panel.border = element_blank()
) +
theme(axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5))
plot_a <- ggplot(mydata, aes(x=x_normcounts, y=y_normcounts)) +
geom_point(aes(colour=factor(no_a)), shape=".") +
scale_colour_manual(values=NewGreens, name="As in kmer") +
scale_x_continuous(name=xlabel, limits=c(0, 3)) +
scale_y_continuous(name=ylabel, limits=c(0, 3)) +
guides(colour = guide_legend(override.aes = list(shape=15))) +
theme_bw() +
theme(
plot.background = element_blank()
,panel.grid.major = element_blank()
,panel.grid.minor = element_blank()
,panel.border = element_blank()
) +
theme(axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5))
# Putting them all together
grid.arrange(plot_a, plot_c, plot_g, plot_t, nrow = 2)
# Spit out correlation
cor.test(mydata$x_normcounts, mydata$y_normcounts, method="pearson", conf.level=0.95)
library(ggplot2)
library(gtable)
library(gridExtra)
library(RColorBrewer)
# Load data
normcnt <- readRDS("~/selex2019/kmer_cnt_R_PCRBIAS/Trulig147v1III-Arin2-PCRbias-4DiffCycle-Phusion-2xx16dilu-0cycPCR-IIIc1-E1-ZhuBar96p1-bTAGTGTTG_S49_R1_001.peared_trimmed.fq.gz.RDS", refhook=NULL)
kmerbasefreqs <- readRDS("~/github/selex2019/analysis/kmerbasefreqs.RDS", refhook=NULL)
xcnt <- readRDS("~/selex2019/kmer_cnt_R_PCRBIAS/Trulig147v1III-Arin2-PCRbias-3DiffEnzyme-Phire-1xbottolNeckPCR-IIIc1-B6-ZhuBar96p1-bGACGGTGC_S18_R1_001.peared_trimmed.fq.gz.RDS", refhook=NULL)
ycnt <- readRDS("~/selex2019/kmer_cnt_R_PCRBIAS/Trulig147v1III-Arin2-PCRbias-3DiffEnzyme-Phire-2xbottolNeckPCR-IIIc1-B7-ZhuBar96p1-bACTTACTC_S19_R1_001.peared_trimmed.fq.gz.RDS", refhook=NULL)
# Define axis labels here
# (trust me, this is easier than extracting this info from the filenames)
xlabel = "Phire bottleneck 1 fold change"
ylabel = "Phire bottleneck 2 fold change"
kmers <- nrow(normcnt)
# Normalise data
xcnt_norm <- data.frame(normcnt$kmer, xcnt$counts/normcnt$counts)
colnames(xcnt_norm) <- c("kmer", "x_normcounts")
ycnt_norm <- data.frame(normcnt$kmer, ycnt$counts/normcnt$counts)
colnames(ycnt_norm) <- c("kmer", "y_normcounts")
# Prepare data frame for plotting
mydata <- data.frame(normcnt$kmer, xcnt_norm$x_normcounts, ycnt_norm$y_normcounts, kmerbasefreqs)
colnames(mydata) <- c("kmer", "x_normcounts", "y_normcounts", "no_a", "no_c", "no_g", "no_t")
# Extend colour palettes to cover 10 values (0-9)
NewGreens <- colorRampPalette(brewer.pal(9,"Greens"))(10)
NewBlues <- colorRampPalette(brewer.pal(9,"Blues"))(10)
NewPurples <- colorRampPalette(brewer.pal(9,"Purples"))(10)
NewReds <- colorRampPalette(brewer.pal(9,"Reds"))(10)
# Define plots
plot_a <- ggplot(mydata, aes(x=x_normcounts, y=y_normcounts)) +
geom_point(aes(colour=factor(no_a)), shape=".") +
scale_colour_manual(values=NewGreens, name="As in kmer") +
scale_x_continuous(name=xlabel, limits=c(0, 3)) +
scale_y_continuous(name=ylabel, limits=c(0, 3)) +
guides(colour = guide_legend(override.aes = list(shape=15))) +
theme_bw() +
theme(
plot.background = element_blank()
,panel.grid.major = element_blank()
,panel.grid.minor = element_blank()
,panel.border = element_blank()
) +
theme(axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5))
plot_c <- ggplot(mydata, aes(x=x_normcounts, y=y_normcounts)) +
geom_point(aes(colour=factor(no_c)), shape=".") +
scale_colour_manual(values=NewBlues, name="Cs in kmer") +
scale_x_continuous(name=xlabel, limits=c(0, 3)) +
scale_y_continuous(name=ylabel, limits=c(0, 3)) +
guides(colour = guide_legend(override.aes = list(shape=15))) +
theme_bw() +
theme(
plot.background = element_blank()
,panel.grid.major = element_blank()
,panel.grid.minor = element_blank()
,panel.border = element_blank()
) +
theme(axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5))
plot_g <- ggplot(mydata, aes(x=x_normcounts, y=y_normcounts)) +
geom_point(aes(colour=factor(no_g)), shape=".") +
scale_colour_manual(values=NewPurples, name="Gs in kmer") +
scale_x_continuous(name=xlabel, limits=c(0, 3)) +
scale_y_continuous(name=ylabel, limits=c(0, 3)) +
guides(colour = guide_legend(override.aes = list(shape=15))) +
theme_bw() +
theme(
plot.background = element_blank()
,panel.grid.major = element_blank()
,panel.grid.minor = element_blank()
,panel.border = element_blank()
) +
theme(axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5))
plot_t <- ggplot(mydata, aes(x=x_normcounts, y=y_normcounts)) +
geom_point(aes(colour=factor(no_t)), shape=".") +
scale_colour_manual(values=NewReds, name="Ts in kmer") +
scale_x_continuous(name=xlabel, limits=c(0, 3)) +
scale_y_continuous(name=ylabel, limits=c(0, 3)) +
guides(colour = guide_legend(override.aes = list(shape=15))) +
theme_bw() +
theme(
plot.background = element_blank()
,panel.grid.major = element_blank()
,panel.grid.minor = element_blank()
,panel.border = element_blank()
) +
theme(axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5))
plot_a <- ggplot(mydata, aes(x=x_normcounts, y=y_normcounts)) +
geom_point(aes(colour=factor(no_a)), shape=".") +
scale_colour_manual(values=NewGreens, name="As in kmer") +
scale_x_continuous(name=xlabel, limits=c(0, 3)) +
scale_y_continuous(name=ylabel, limits=c(0, 3)) +
guides(colour = guide_legend(override.aes = list(shape=15))) +
theme_bw() +
theme(
plot.background = element_blank()
,panel.grid.major = element_blank()
,panel.grid.minor = element_blank()
,panel.border = element_blank()
) +
theme(axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5))
# Putting them all together
grid.arrange(plot_a, plot_c, plot_g, plot_t, nrow = 2)
# Spit out correlation
cor.test(mydata$x_normcounts, mydata$y_normcounts, method="pearson", conf.level=0.95)
setwd("~/github/citramalate/fba/result")
library(readr)
FluxesAfterBound_41d_copy <- read_csv("~/github/citramalate/fba/result/citra/FluxesAfterBound_41d_copy.csv")
View(FluxesAfterBound_41d_copy)
library(readr)
FVA100Output_citra <- read_csv("~/github/citramalate/fba/result/fva/FVA100Output_citra.csv")
View(FVA100Output_citra)
merge(FluxesAfterBound_41d_copy, FVA100Output_citra)
mydata <- merge(FluxesAfterBound_41d_copy, FVA100Output_citra)
View(mydata)
mydata
mydata[mydata$Flux,]
mydata[mydata$minimum < mydata$Flux < mydata$maximum,]
mydata[mydata$minimum < mydata$Flux & mydat$Flux < mydata$maximum,]
mydata[mydata$minimum < mydata$Flux & mydata$Flux < mydata$maximum,]
mydata[mydata$minimum >= mydata$Flux | mydata$Flux <= mydata$maximum,]
mydata[mydata$minimum >= mydata$Flux | mydata$Flux >= mydata$maximum,]
mydata[mydata$minimum <= mydata$Flux | mydata$Flux >= mydata$maximum,]
mydata[mydata$minimum >= mydata$Flux | mydata$Flux >= mydata$maximum,]
mydata[mydata$minimum > mydata$Flux | mydata$Flux > mydata$maximum,]
mydata[(mydata$Flux - mydata$minimum) < 0 | (mydata$Flux - mydata$maximum) > 0,]
mydata[(mydata$Flux - mydata$minimum) < 1e-8 | (mydata$Flux - mydata$maximum) > 1e-8,]
mydata[(mydata$Flux - mydata$minimum) > 1e-6 | (mydata$Flux - mydata$maximum) > 1e-66,]
mydata[(mydata$Flux - mydata$minimum) > 1e-6 | (mydata$Flux - mydata$maximum) > 1e-6,]
mydata[(mydata$Flux - mydata$minimum) > 1e-6 | (mydata$Flux - mydata$maximum) > 1e-6,]
outofrange <- mydata[(mydata$Flux - mydata$minimum) > 1e-6 | (mydata$Flux - mydata$maximum) > 1e-6,]
View(outofrange)
outofrange <- mydata[(mydata$Flux - mydata$minimum) < -1e-6 | (mydata$Flux - mydata$maximum) > 1e-6,]
View(outofrange)
outofrange <- mydata[(mydata$Flux - mydata$minimum) < -1e-10 | (mydata$Flux - mydata$maximum) > 1e-10,]
outofrange <- mydata[(mydata$Flux - mydata$minimum) < -1e-8 | (mydata$Flux - mydata$maximum) > 1e-8,]
mydata$Reaction
(mydata$Flux - mydata$minimum)/(mydata$maximum - mydata$minimum)
data.frame(mydata$Reaction, (mydata$Flux - mydata$minimum)/(mydata$maximum - mydata$minimum))
foo <- data.frame(mydata$Reaction, (mydata$Flux - mydata$minimum)/(mydata$maximum - mydata$minimum))
View(foo)
foo <- data.frame(mydata$Reaction, (mydata$Flux - mydata$minimum)/(mydata$maximum - mydata$minimum), mydata$maximum - mydata$minimum)
names(foo) <- c("Reaction", "Percentage", "Difference")
foo[abs(foo$Difference) > 1e-6,]
View(foo[abs(foo$Difference) > 1e-6,])
foothaticare <- foo[abs(foo$Difference) > 1e-6,]
View(foothaticare)
write.csv(foothaticare, "FVAvFBA.csv")
